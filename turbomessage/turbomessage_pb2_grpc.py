# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import turbomessage_pb2 as turbomessage__pb2


class ServidorTurboMessageStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.registrar_usuario = channel.unary_unary(
                '/turbomessage.ServidorTurboMessage/registrar_usuario',
                request_serializer=turbomessage__pb2.LoginRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.Status.FromString,
                )
        self.login = channel.unary_unary(
                '/turbomessage.ServidorTurboMessage/login',
                request_serializer=turbomessage__pb2.LoginRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.Status.FromString,
                )
        self.enviar_mensaje = channel.unary_unary(
                '/turbomessage.ServidorTurboMessage/enviar_mensaje',
                request_serializer=turbomessage__pb2.EnviarMensajeRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.Status.FromString,
                )
        self.get_bandeja = channel.unary_unary(
                '/turbomessage.ServidorTurboMessage/get_bandeja',
                request_serializer=turbomessage__pb2.GetBandejaRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.Bandeja.FromString,
                )
        self.borrar_mensaje = channel.unary_unary(
                '/turbomessage.ServidorTurboMessage/borrar_mensaje',
                request_serializer=turbomessage__pb2.MensajeActionRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.Status.FromString,
                )
        self.marcar_leido = channel.unary_unary(
                '/turbomessage.ServidorTurboMessage/marcar_leido',
                request_serializer=turbomessage__pb2.MensajeActionRequest.SerializeToString,
                response_deserializer=turbomessage__pb2.Status.FromString,
                )


class ServidorTurboMessageServicer(object):
    """Missing associated documentation comment in .proto file."""

    def registrar_usuario(self, request, context):
        """Admin de usuarios
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enviar_mensaje(self, request, context):
        """Enviar correo
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_bandeja(self, request, context):
        """Fetch bandejas
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def borrar_mensaje(self, request, context):
        """Acciones con mensajes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def marcar_leido(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServidorTurboMessageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'registrar_usuario': grpc.unary_unary_rpc_method_handler(
                    servicer.registrar_usuario,
                    request_deserializer=turbomessage__pb2.LoginRequest.FromString,
                    response_serializer=turbomessage__pb2.Status.SerializeToString,
            ),
            'login': grpc.unary_unary_rpc_method_handler(
                    servicer.login,
                    request_deserializer=turbomessage__pb2.LoginRequest.FromString,
                    response_serializer=turbomessage__pb2.Status.SerializeToString,
            ),
            'enviar_mensaje': grpc.unary_unary_rpc_method_handler(
                    servicer.enviar_mensaje,
                    request_deserializer=turbomessage__pb2.EnviarMensajeRequest.FromString,
                    response_serializer=turbomessage__pb2.Status.SerializeToString,
            ),
            'get_bandeja': grpc.unary_unary_rpc_method_handler(
                    servicer.get_bandeja,
                    request_deserializer=turbomessage__pb2.GetBandejaRequest.FromString,
                    response_serializer=turbomessage__pb2.Bandeja.SerializeToString,
            ),
            'borrar_mensaje': grpc.unary_unary_rpc_method_handler(
                    servicer.borrar_mensaje,
                    request_deserializer=turbomessage__pb2.MensajeActionRequest.FromString,
                    response_serializer=turbomessage__pb2.Status.SerializeToString,
            ),
            'marcar_leido': grpc.unary_unary_rpc_method_handler(
                    servicer.marcar_leido,
                    request_deserializer=turbomessage__pb2.MensajeActionRequest.FromString,
                    response_serializer=turbomessage__pb2.Status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'turbomessage.ServidorTurboMessage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServidorTurboMessage(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def registrar_usuario(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbomessage.ServidorTurboMessage/registrar_usuario',
            turbomessage__pb2.LoginRequest.SerializeToString,
            turbomessage__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbomessage.ServidorTurboMessage/login',
            turbomessage__pb2.LoginRequest.SerializeToString,
            turbomessage__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def enviar_mensaje(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbomessage.ServidorTurboMessage/enviar_mensaje',
            turbomessage__pb2.EnviarMensajeRequest.SerializeToString,
            turbomessage__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_bandeja(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbomessage.ServidorTurboMessage/get_bandeja',
            turbomessage__pb2.GetBandejaRequest.SerializeToString,
            turbomessage__pb2.Bandeja.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def borrar_mensaje(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbomessage.ServidorTurboMessage/borrar_mensaje',
            turbomessage__pb2.MensajeActionRequest.SerializeToString,
            turbomessage__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def marcar_leido(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbomessage.ServidorTurboMessage/marcar_leido',
            turbomessage__pb2.MensajeActionRequest.SerializeToString,
            turbomessage__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
